@page "/Details/{Id}"
@using ForumUI.Components
@using ForumUI.Models
@inject IPostData postData
@inject NavigationManager navManager
@inject AuthenticationStateProvider authProvider
@inject IuserData userData
@inject ICommentData commentData
@inject IDbConnection dbConnection

<h1 class="page-heading text-uppercase mb-4">Szczegóły posta</h1>

<div class="row justify-content-center detail-form">
    <div class="col-xl-8 col-lg-10 form-layout">
        @if (post is not null)
        {
            <div class="row post-detail-row">
                <div class="col-11 post-detail">
                    <div>
                        <div class="@GetVoteClass()" @onclick="VoteUp">
                            <div class="text-uppercase">@GetupvotetopText()</div>
                            <span class="material-symbols-outlined">
                                thumb_up
                            </span>

                        </div>
                        <div class="post-detail-date">
                            <div>@post.DateCreated.ToString("MM.dd.yyyy")</div>
                        </div>
                    </div>
                    <div class="post-detail-text">
                        <div class=" fw-bold mb-2 post-detail-post">@post.Post</div>
                        <div class="mb-2 post-detail-author">@post.Author.DisplayName</div>
                        <div class="mb-2 d-none d-md-block">@post.Description</div>
                        <div class="post-entry-text-category d-none d-md-block">
                            @post.Category.CategoryName
                        </div>
                    </div>
                </div>
                <div class="col-1 close-button-section">
                    <button class="btn btn-close" @onclick="ClosePage"></button>
                </div>
            </div>
            <div class="row d-block d-md-none">
                <div class="post-detail-text">
                    <div>@post.Description</div>
                    <div class="post-entry-text-category">@post.Category.CategoryName</div>
                </div>
            </div>
            @if (writeCommet == true)
            {
                <EditForm Model="comment" OnValidSubmit="CreateComment">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="input-section">
                        <label class="form-label fw-bold text-uppercase" for="description">Komentarz</label>
                  
                        <InputTextArea class="form-control" id="description" @bind-Value="comment.Comment" />
                    </div>
                    <div class="center-childeren">
                        <button class="btn btn-main btn-lg text-uppercase" type="submit">Ok</button>
                    </div>
                </EditForm>
            }
            else
            {
                <button class="btn btn-main btn-lg text-uppercase" @onclick="(CheckComment)">Komentuj</button>
            }
            @if (comment is not null)
            {
            
                <Virtualize Items="@comments" Context="s" OverscanCount="10">
                  
                    @if(user == true)
                    {
                        if(s.Author.Id == loggedInUser.Id)
                        {
                            @if (currentEditingDescription == s.Id)
                            {
                                <div class="mb-2 post-detail-author">@s.Author.DisplayName</div>
                                <EditForm class="approval-edit-form" Model="@editedDescription" OnSubmit="(() => SaveDescription(s))">
                                    <InputText class="form-control approval-edit-field" @bind-Value="editedDescription" />
                                    <button class="btn" type="submit">
                                        <span class="oi oi-check submission-edit-approve"></span>
                                    </button>
                                    <button class="btn" @onclick="(() => currentEditingDescription = string.Empty)">
                                        <span class="oi oi-x subbmision-edit-reject"></span>
                                    </button>
                                </EditForm>
                            }
                            else
                            {
                                <div class="post-entry2">
                                    <div class="post-entry-text2">
                                        <div class="post-entry-text-title">
                                            <div class="mb-2 post-detail-author">@s.Author.DisplayName</div>
                                            <div class="mb-2  d-md-block">@s.Comment</div>
                                            <span class="oi oi-pencil submission-edit-icon" @onclick="(() => EditDescription(s))"></span>
                                            <button class="btn" @onclick="(() => DeleteComment(s))">
                                                <span class="oi oi-x subbmision-edit-reject"></span>
                                            </button>
                                        </div>
                                    </div>
                                </div>


                            }
                        }
                        else
                        {
                            @if (currentEditingDescription == s.Id)
                            {
                                <div class="mb-2 post-detail-author">@s.Author.DisplayName</div>
                                <EditForm class="approval-edit-form" Model="@editedDescription" OnSubmit="(() => SaveDescription(s))">
                                    <InputText class="form-control approval-edit-field" @bind-Value="editedDescription" />
                                    <button class="btn" type="submit">
                                        <span class="oi oi-check submission-edit-approve"></span>
                                    </button>
                                    <button class="btn" @onclick="(() => currentEditingDescription = string.Empty)">
                                        <span class="oi oi-x subbmision-edit-reject"></span>
                                    </button>
                                </EditForm>
                            }
                            else
                            {
                                <div class="post-entry2">
                                    <div class="post-entry-text2">
                                        <div class="post-entry-text-title">
                                            <div class="mb-2 post-detail-author">@s.Author.DisplayName</div>
                                            <div class="mb-2  d-md-block">@s.Comment</div>
                                            <AuthorizeView Policy="Admin">
                                                <span class="oi oi-pencil submission-edit-icon" @onclick="(() => EditDescription(s))"></span>
                                                <button class="btn" @onclick="(() => DeleteComment(s))">
                                                    <span class="oi oi-x subbmision-edit-reject"></span>
                                                </button>
                                            </AuthorizeView>
                                        </div>
                                    </div>
                                </div>


                            }
                        }
                    }
                    else
                    {
                        <div class="post-entry2">
                            <div class="post-entry-text2">
                                <div class="post-entry-text-title">
                                    <div class="mb-2 post-detail-author">@s.Author.DisplayName</div>
                                    <div class="mb-2  d-md-block">@s.Comment</div>
                                </div>
                            </div>
                        </div>
                    }
                </Virtualize>
            }
        }
    </div>
</div>




